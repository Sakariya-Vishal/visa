---
import { Image, Picture } from "@astrojs/image/components";
import close from "../../public/Images/chat_close.svg";
import chat_send_btn from "../../public/Images/chat_send.svg";
import chat from "../../public/Images/chat.svg";
import double_right from "../../public/Images/double_right.svg";
import sanskar_chat_logo from "../../public/Images/sanskar_chat_logo.svg";
import reset_chat_icon from "../../public/Images/reset_chat_icon.svg";
import "../styles.css";
---

<div
class="fixed grid justify-items-end right-5 bottom-5 z-30 items-center cursor-pointer"
    id="chat_icon"
>
    <div class="font-semibold text-base text-[#31393C] bg-gray-200 p-2 mr-6 mb-1 rounded-3xl hidden rounded-br-[0px]" id="chat_text"></div>
    <!-- <div class="font-semibold text-base text-[#31393C] rounded-[10px] bg-green-500">Chat</div> -->
    <Image loading="eager" src={chat} alt="chatbot" class="items-right"/>
</div>

<!-- chat popup -->
<div class="bg-white box fixed bottom-2 right-2 left-2 md:bottom-2 md:right-2 md:left-auto z-30" id="chat_popup">
    <Image
        src={close}
        alt="close"
        class="absolute right-4 top-[26px] h-3 w-3 cursor-pointer"
        id="close_btn"
    />
    <Image
        src={reset_chat_icon}
        alt="reset chatbot"
        class="absolute right-8 top-6 h-4 w-4 cursor-pointer"
        id="reset_chatbot"
    />

    <div id="bg-color">
    <div
        class="lg:h-[30rem] md:h-[70vh] h-[70vh] lg:w-80 md:w-[26rem] w-full"
        id="a"
    >
        <div
            class="flex items-center gap-2 bg-[#F6F9FB] rounded-t-lg p-4 text-[#31393c] lg:text-xl md:text-lg text-base font-semibold"
        >
            <Image loading="eager" src={sanskar_chat_logo} alt="sanskar logo" />
            <p>Sanskar ChatBot</p>
        </div>

        <div
            class="overflow-y-scroll lg:h-[26rem] md:h-[58vh] h-[58vh]"
            id="messages"
        >
            <!-- Received Message    -->
            <!-- <div class="px-2 pt-2 text-right ml-5 mt-5">
                <p class="text-white !text-left bg-[#3E96F4] text-xs lg:text-base md:text-sm p-2 rounded-l-[10px] rounded-b-[10px] inline-block">
                  Hello
                </p>
              <div class="flex items-center justify-end">
                <p class="text-[#9A9A9A] text-xs lg:text-sm md:text-xs">11:53 AM</p>
                <img src="https://sanskartechnolab.com/files/single_right.svg" alt="single tick"/>
              </div>
            </div> -->

            <!-- Sent Message -->
            <!-- <div class="px-2 pt-2 mr-5">
                <p class="text-[#31393C] bg-[#F6F9FB] text-xs lg:text-base md:text-sm p-2 rounded-r-[10px] rounded-b-[10px] inline-block">
                  I am looking for a new ERP system for my company
                </p>
                <span class="relative">
                    <p class="text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute right-0 whitespace-nowrap">11:53 AM</p>
                </span>
            </div> -->

            <!-- Another Received Message -->
            <!-- <div class="px-2 pt-2 text-right ml-5 mt-5">
                <p class="text-white !text-left bg-[#3E96F4] text-xs lg:text-base md:text-sm p-2 rounded-l-[10px] rounded-b-[10px] inline-block">
                    Another received messageadsf
                </p> 
                <div class="flex items-center justify-end">
                  <p class="text-[#9A9A9A] text-xs lg:text-sm md:text-xs">11:53 AM</p>
                  <Image src={double_right} alt="Double Right" class="w-4 h-4 ml-2" />
                </div>
            </div> -->
        </div>
    </div>

    <form class="flex gap-2 items-center p-2" id="chat_form">
        <input
            class="w-11/12 rounded-[10px] text-[#333333] border-none bg-[#F6F9FB]"
            type="text"
            placeholder="Please select from the options"
            name="chat_message"
            id="chat_message"
            disabled
            autocomplete="off"
        />
        <button class="w-1/12" id="send_button" disabled>
            <Image loading="eager" src={chat_send_btn} alt="chatbot" />
        </button>
    </form>

</div>
</div>

<style>
    .box {
        border-radius: 10px;
        border: 1px solid #d0d0d0;
        background: #fff;
        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.25);
    }

    #messages::-webkit-scrollbar {
        width: 2px;
    }

    #messages::-webkit-scrollbar-thumb {
        background-color: #3E96F4; 
    }

    @keyframes fadeInOut {
        0%, 100% {
            opacity: 0;
            transform: translateY(0);
        }
        50% {
            opacity: 1;
            transform: translateY(-10px);
        }
    }

    .bg-color{
        background-color: white;
        animation: colorAnimation 3s ease-in-out forwards;
    }

    @keyframes colorAnimation {
        0% {
            background-color: #3E96F4;
        }
        100% {
            background-color: white;
        }
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
            transform: translateY(0);
        }
        40% {
            transform: translateY(-20px);
        }
        60% {
            transform: translateY(-10px);
        }
    }
/* Apply the animation to the chat icon */
    #chat_icon {
        animation: bounce 1s infinite;
    }

</style>

<script>

    // // Initially, hide the chat icon
    // document.getElementById("chat_icon").style.display = "none";

// import { InvalidFrontmatterInjectionError } from "astro/dist/core/errors/errors-data";
// import { fade } from "astro:transitions";

    // // Wait for 2 seconds
    // setTimeout(function() {
    // // Show the chat icon
    //     document.getElementById("chat_icon").style.display = "block";

    // // After 2 seconds, add the bounce class to start the animation
    //     setTimeout(function() {
    //         document.getElementById("chat_icon").classList.add("bounce");
    //     }, 6000);

    // }, 3000);


    if(!window.localStorage.getItem("a")){
            start_auto_message(true);
        }
        else{
            var chat_html = window.localStorage.getItem("chat_html")
            document.getElementById("messages").innerHTML = chat_html
            scrollToBottom()
        }

    // chat text
    // setTimeout(function() {
    //     var chat_text = document.getElementById("chat_text")
    //     chat_text.classList.remove("hidden");
    //     // var textToType = "Chat With Us!";
    //     var textToType = "What Are You Looking For?";
    //     var currentText = "";
    //     var charIndex = 0;
        
    //     var typingInterval = setInterval(function() {
    //         if (charIndex < textToType.length) {
    //             currentText += textToType[charIndex];
    //             chat_text.innerText = currentText;
    //             charIndex++;
    //         } else {
    //             clearInterval(typingInterval);
    //         }
    //     }, 100);

    // }, 100);

//     function typeAndRepeat() {
//     var chat_text = document.getElementById("chat_text");
//     chat_text.classList.remove("hidden");
    
//     var textToType = "Chat With Us!";
//     var currentText = "";
//     var charIndex = 0;
    
//     var typingInterval = setInterval(function() {
//         if (charIndex < textToType.length) {
//             currentText += textToType[charIndex];
//             chat_text.innerText = currentText;
//             charIndex++;
//         } else {
//             clearInterval(typingInterval);
//             setTimeout(function() {
//                 chat_text.innerText = ""; // Remove the text
//                 setTimeout(typeAndRepeat, 1000); // Repeat the typing after a delay
//             }, 2000); // Delay before removing the text (adjust as needed)
//         }
//     }, 100); // Adjust the typing speed (in milliseconds) as needed
// }

// Start the loop after 6 seconds (6000 milliseconds)
// setTimeout(typeAndRepeat, 6000);


    var token = window.localStorage.getItem("chat_token");
    if (!token) {
        window.localStorage.setItem(
            "chat_token",
            Math.random().toString(36).substr(2)
        );
    }

    const messagesDiv = document.getElementById('messages');

    // Scroll to the bottom of the div
    messagesDiv.scrollTop = messagesDiv.scrollHeight;

    const chat_icon = document.getElementById("chat_icon");
    const chat_popup = document.getElementById("chat_popup");
    const close_btn = document.getElementById("close_btn");
    const chat_message = document.getElementById("chat_message");
    const send_button = document.getElementById("send_button");
    var form = document.getElementById("chat_form");
    const body = document.body;

    // var e_selected_module = []
    // var s_selected_module = []
    var selected_module = [];
    var selected_technology = [];
    var questions_answer = [];
    var user_details = [];
    var need_customization = 0

    //  Auto Create Message Design Of User.
    function create_user_message_div(
        parent_id,
        outerDivClasses,
        message
    ) {
        scrollToBottom()

        const container = document.getElementById(parent_id);

        // Create the outermost div element with classes
        const outerDiv = document.createElement("div");
        // outerDiv.className = 'px-2 pt-2 text-right ml-5 mt-5';
        outerDiv.className = outerDivClasses;

        // Create the message paragraph element
        const messageParagraph = document.createElement("p");
        messageParagraph.className =
            "text-white !text-left bg-[#3E96F4] text-sm lg:text-base md:text-base p-4 py-2 rounded-l-[10px] rounded-b-[10px] inline-block";
        messageParagraph.textContent = message;
        // if(message == "What is your name ?"){
        //     messageParagraph.id = "wiyn"
        // }
        // if(message == "What is your email address ?"){
        //     messageParagraph.id = "wiyea"
        // }
        // if(message == "Kindly let us know the details of your specific requirements, so we can assist you better!"){
        //     messageParagraph.id = "something_else"
        // }
        // if(message == "In order to assist you better, kindly provide a brief description of your customization needs."){
        //     messageParagraph.id = "customization"
        // }

        // Create the inner flex container
        const innerFlexContainer = document.createElement("div");
        innerFlexContainer.className = "flex items-center justify-end";

        // Create the timestamp paragraph element
        const timestampParagraph = document.createElement("p");
        timestampParagraph.className =
            "text-[#9A9A9A] text-sm lg:text-base md:text-base";
        // timestampParagraph.textContent = formatDateToAMPM(date);
        timestampParagraph.textContent = get_current_time();

        // Create the image element
        const imageElement = document.createElement("img");
        // if (read == 1)
        // {
        imageElement.src =
            "https://sanskartechnolab.com/files/double_right.svg";
        // }
        // else{
        //     imageElement.src = 'https://sanskartechnolab.com/files/single_right.svg';
        // }
        imageElement.alt = "single tick";
        imageElement.className = "w-4 h-4 ml-2";

        // Append elements to their respective parents
        innerFlexContainer.appendChild(timestampParagraph);
        innerFlexContainer.appendChild(imageElement);
        outerDiv.appendChild(messageParagraph);
        outerDiv.appendChild(innerFlexContainer);
        container.appendChild(outerDiv);
        scrollToBottom()


        chat_message.placeholder='Please select from the options';
        chat_message.disabled = true;
        send_button.disabled = true;
        var chat_html = document.getElementById("messages").innerHTML
        window.localStorage.setItem("chat_html", chat_html)
    }

    // function delay(ms) {
    //     return new Promise(resolve => setTimeout(resolve, ms));
    //     }

    //     async function firstFunction() {
    //     console.log("First function started");
    //     await delay(2000); // Wait for 2 seconds
    //     console.log("First function completed");
    //     }

    //     async function secondFunction() {
    //     console.log("Second function started");
    //     // Perform some tasks after the delay
    //     console.log("Second function completed");
    //     }

    //     async function runFunctions() {
    //     await firstFunction(); // Wait for the first function to complete
    //     await secondFunction(); // Start the second function only after the first one has completed
    //     }

    //     runFunctions();



    // Auto Create Message Design Of Bot.
    async function create_bot_message_div(
        parent_id,
        outerDivClasses,
        message,
        buttons = [],
        button_parent_class = 'flex flex-wrap justify-center gap-2',
        checkboxes = [],
        timeout = 3000,
        show_checkboxes=5
    ) {

        scrollToBottom()
        disablePreviousInputs()

        const parent = document.getElementById(parent_id);

        const outerDiv = document.createElement("div");
        outerDiv.className = outerDivClasses;

        const messageParagraph = document.createElement("p");
        // messageParagraph.id = "messageParagraph"
        messageParagraph.className = "p-4"
        messageParagraph.textContent = "..."
        outerDiv.appendChild(messageParagraph)
        parent.appendChild(outerDiv)
        scrollToBottom()
        
        // if(typing){
            // setInterval(() => {
                messageParagraph.style.animation = 'fadeInOut 1.5s infinite';
            // }, 100);
        // }

        await new Promise(resolve => setTimeout(resolve, timeout));
        
        messageParagraph.className =
            "text-[#31393C] bg-[#F6F9FB] text-sm lg:text-base md:text-base p-4 py-2 rounded-r-[10px] rounded-b-[10px] inline-block";
        messageParagraph.style.animation = '';
       
        messageParagraph.innerHTML = message;

        const btn_div = document.createElement("span");
        btn_div.className = button_parent_class;
        if (buttons.length === 0) {
        } else {
            // btn_div.className = 'text-[#31393C] bg-[#F6F9FB] text-xs lg:text-base md:text-sm p-4 py-2 rounded-r-[10px] rounded-b-[10px] inline-block';
            // btn_div.textContent = message;
            buttons.forEach((button) => {
                const c_button = document.createElement("button");
                c_button.className = button.button_class;
                c_button.id = button.button_id;
                c_button.textContent = button.button_label;
                c_button.addEventListener("click", button.button_click_action);
                btn_div.appendChild(c_button);

                // document.getElementById(button.button_id).addEventListener('click', button.button_click_action)
            });
        }

        // const checkboxSpan = document.createElement("span");
        // const showMoreButton = document.createElement("button");
        // showMoreButton.textContent = "Show More";
        // showMoreButton.className = "text-[#3E96F4] text-sm lg:text-base md:text-base ml-5";

        // if (checkboxes.length === 0) {
        // } else {
        //     checkboxSpan.className =
        //         "grid grid-cols-1 md:gap-auto gap-1 justify-items-start mt-3";
        //     const selectedValues = document.getElementById("selectedValues");

        //     // const options = checkboxes;

        //     // ####################### new code start ###########################
            
            
        //     let visibleCheckboxes = 5;
        //     // var showMoreButton = document.getElementById("show_more")
        //     showMoreButton.addEventListener("click", () => {
        //     const hiddenCheckboxes = checkboxes.slice(visibleCheckboxes, visibleCheckboxes + 5);
        //     hiddenCheckboxes.forEach((option) => {
        //     const checkboxDiv = document.createElement("div");
        //     checkboxDiv.className = "flex gap-2 items-center ml-5 text-[#31393C] text-sm lg:text-base md:text-base";
        //     const checkbox = document.createElement("input");
        //     checkbox.type = "checkbox";
        //     checkbox.value = option;
        //     checkbox.id = option;
        //     const label = document.createElement("label");
        //     label.htmlFor = option;
        //     label.appendChild(document.createTextNode(option));
        //     checkboxDiv.appendChild(checkbox);
        //     checkboxDiv.appendChild(label);

        //     checkboxSpan.appendChild(checkboxDiv);
        //     scrollToBottom()
        //     });

        //     visibleCheckboxes += hiddenCheckboxes.length;

        //     if (visibleCheckboxes >= checkboxes.length) {
        //     showMoreButton.style.display = "none"; // Hide the button when all checkboxes are visible
        //     }
        //     });

        //     // Initially, show the first 5 checkboxes
        //     for (let i = 0; i < visibleCheckboxes; i++) {
        //     const option = checkboxes[i];
        //     const checkboxDiv = document.createElement("div");
        //     checkboxDiv.className = "flex gap-2 items-center ml-5 text-[#31393C] text-sm lg:text-base md:text-base";
        //     const checkbox = document.createElement("input");
        //     checkbox.type = "checkbox";
        //     checkbox.value = option;
        //     checkbox.id = option;

        //     const label = document.createElement("label");
        //     label.htmlFor = option;
        //     label.appendChild(document.createTextNode(option));

        //     checkboxDiv.appendChild(checkbox);
        //     checkboxDiv.appendChild(label);

        //     checkboxSpan.appendChild(checkboxDiv);
            
        //     }
        //     // ####################### new code end ###########################

        //     // checkboxes.forEach((option) => {
        //     //     const checkboxDiv = document.createElement("div");
        //     //     checkboxDiv.className = "flex gap-2 items-center ml-5 text-[#31393C] text-xs lg:text-base md:text-sm";
        //     //     const checkbox = document.createElement("input");
        //     //     checkbox.type = "checkbox";
        //     //     checkbox.value = option;
        //     //     checkbox.id = option;

        //     //     const label = document.createElement("label");
        //     //     label.htmlFor = option.value;
        //     //     label.appendChild(document.createTextNode(option));

        //     //     checkboxDiv.appendChild(checkbox);
        //     //     checkboxDiv.appendChild(label);

        //     //     checkboxSpan.appendChild(checkboxDiv);

        //     //     // Add event listener to track checkbox changes
        //     //     // checkbox.addEventListener('change', updateSelectedValues);
        //     //     // checkbox.addEventListener('change', function (event) {
        //     //     //     updateSelectedValues(event.target.id);
        //     //     // });
        //     // });
        //     // scrollToBottom()

        //     function updateSelectedValues(id) {
        //         selected_module = [];
        //         selected_module.push({"module_name": id});
        //     }

        //     // // Function to update selected values
        //     // function updateSelectedValues() {
        //     //     const selectedCheckboxes = document.querySelectorAll('input[type="checkbox"]:checked');
        //     //     const selectedValueArray = Array.from(selectedCheckboxes).map(checkbox => checkbox.value);
        //     //     selectedValues.textContent = selectedValueArray.join(', ');
        //     // }
        //     scrollToBottom()

        // }

        const innerSpan = document.createElement("span");
        innerSpan.className = "relative";

        // Create the timestamp paragraph element within the span
        const timestampParagraph = document.createElement("p");
        if (message.length < 5) {
            timestampParagraph.className =
                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute -right-8 whitespace-nowrap overflow-visible";
        } else if (message.length <= 10) {
            timestampParagraph.className =
                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute -right-20 whitespace-nowrap overflow-visible";
        } else {
            timestampParagraph.className =
                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute right-0 whitespace-nowrap overflow-visible";
        }

        timestampParagraph.textContent = get_current_time();

        innerSpan.appendChild(timestampParagraph);
        outerDiv.appendChild(messageParagraph);

        if (checkboxes.length === 0) {
        } else {
            const [checkboxSpan, showMoreButton] = create_checkboxes(checkboxes, show_checkboxes)
    
            outerDiv.appendChild(checkboxSpan);
            if (checkboxes.length !== 0) {
                outerDiv.appendChild(showMoreButton);   
                outerDiv.appendChild(document.createElement("br"))
            }
            scrollToBottom()
        }
        outerDiv.appendChild(btn_div);
        // outerDiv.appendChild(innerSpan);

        parent.appendChild(outerDiv);
        scrollToBottom()
        
        var chat_html = document.getElementById("messages").innerHTML
        window.localStorage.setItem("chat_html", chat_html)
        
    }


    function create_checkboxes(checkboxes, show_checkboxes){
        const checkboxSpan = document.createElement("span");
        const showMoreButton = document.createElement("button");
        showMoreButton.textContent = "Show More";
        showMoreButton.id="show_more"
        showMoreButton.className = "text-[#3E96F4] text-sm lg:text-base md:text-base ml-5";
        checkboxSpan.className =
            "grid grid-cols-1 md:gap-auto gap-1 justify-items-start mt-3";
        const selectedValues = document.getElementById("selectedValues");

        // const options = checkboxes;

        // ####################### new code start ###########################
        
        
        let visibleCheckboxes = show_checkboxes;
        // var showMoreButton = document.getElementById("show_more")
        showMoreButton.addEventListener("click", () => {
            const hiddenCheckboxes = checkboxes.slice(visibleCheckboxes, visibleCheckboxes + 5);
            hiddenCheckboxes.forEach((option) => {
            const checkboxDiv = document.createElement("div");
            checkboxDiv.className = "flex gap-2 items-center ml-5 text-[#31393C] text-sm lg:text-base md:text-base";
            const checkbox = document.createElement("input");
            checkbox.type = "checkbox";
            checkbox.value = option;
            checkbox.id = option;
            const label = document.createElement("label");
            label.htmlFor = option;
            label.appendChild(document.createTextNode(option));
            checkboxDiv.appendChild(checkbox);
            checkboxDiv.appendChild(label);

            checkboxSpan.appendChild(checkboxDiv);
            scrollToBottom()
        });

        visibleCheckboxes += hiddenCheckboxes.length;

        if (visibleCheckboxes >= checkboxes.length) {
        showMoreButton.style.display = "none"; // Hide the button when all checkboxes are visible
        }
        });

        // Initially, show the first 5 checkboxes
        for (let i = 0; i < visibleCheckboxes; i++) {
        const option = checkboxes[i];
        const checkboxDiv = document.createElement("div");
        checkboxDiv.className = "flex gap-2 items-center ml-5 text-[#31393C] text-sm lg:text-base md:text-base";
        const checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.value = option;
        checkbox.id = option;

        const label = document.createElement("label");
        label.htmlFor = option;
        label.appendChild(document.createTextNode(option));

        checkboxDiv.appendChild(checkbox);
        checkboxDiv.appendChild(label);

        checkboxSpan.appendChild(checkboxDiv);
        
        }
        checkboxSpan.addEventListener('change', function (event) {
            updateSelectedValues(event.target.id);
        });
    
        function updateSelectedValues(id) {
            console.log("asdfasdf", id)
            var sm = JSON.parse(window.localStorage.getItem("local_selected_module")) || [];
            sm.push(id);
            window.localStorage.setItem("local_selected_module", JSON.stringify(sm));
        }
        // scrollToBottom()
        return [checkboxSpan, showMoreButton];

    }


    async function start_auto_message(send_hello=false) {
        window.localStorage.setItem("a", "1")
        scrollToBottom()
        var buttons = [
            {
                button_id: "erpnext",
                button_label: "ERPNext",
                button_click_action: erpnext,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 hover:bg-[#3E96F4] hover:text-white",
            },
            {
                button_id: "service_now",
                button_label: "ServiceNow",
                button_click_action: service_now,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 hover:bg-[#3E96F4] hover:text-white",
            },
            // {
            //     button_id: "third_party_integration",
            //     button_label: "Third Party Integration",
            //     button_click_action: third_party_integration,
            //     button_class:
            //         "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 hover:bg-[#3E96F4] hover:text-white",
            // },
            {
                button_id: "customization",
                // button_label: "Customization",
                button_label: "Something Else",
                button_click_action: customization,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 hover:bg-[#3E96F4] hover:text-white",
            },
            {
                button_id: "career",
                button_label: "Career",
                button_click_action: career,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 hover:bg-[#3E96F4] hover:text-white",
            },
        ];
        var message1 = "Hey There! <br /> So good to see you here. <br />Welcome to Sanskar Technolab. <br /> I’m here to help you out with your queries!";
        var message = "How can I help you with? ";
       
        if (send_hello){
            document.getElementById("bg-color").classList.add("bg-color")
            await create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5",
                message1,
                [],
                '',
                [],
                3000,
                false
            );
        }
           await create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5",
                message,
                buttons,
            );
    }

    function get_messages() {
        fetch(
            `https://sanskar.frappe.cloud/api/resource/Astro Site Chat?filters=[["token", "=", "${token}"]]&fields=["name", "date", "message", "read", "is_owner"]&order_by=date asc`,
            {
                method: "GET",
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json",
                },
            }
        )
            .then((response) => response.json())
            .then((data) => {
                var messages = data.data;
                for (let i = 0; i < messages.length; i++) {
                    console.log(messages[i]);

                    if (messages[i].is_owner == 1) {
                        const container = document.getElementById("messages");

                        // Create the outermost div element with classes
                        const outerDiv = document.createElement("div");
                        outerDiv.className = "px-2 pt-2 text-right ml-5 mt-5";

                        // Create the message paragraph element
                        const messageParagraph = document.createElement("p");
                        messageParagraph.className =
                            "text-white !text-left bg-[#3E96F4] text-xs lg:text-base md:text-sm p-4 py-2 rounded-l-[10px] rounded-b-[10px] inline-block";
                        messageParagraph.textContent = messages[i].message;

                        // Create the inner flex container
                        const innerFlexContainer =
                            document.createElement("div");
                        innerFlexContainer.className =
                            "flex items-center justify-end";

                        // Create the timestamp paragraph element
                        const timestampParagraph = document.createElement("p");
                        timestampParagraph.className =
                            "text-[#9A9A9A] text-xs lg:text-sm md:text-xs";
                        timestampParagraph.textContent = formatDateToAMPM(
                            messages[i].date
                        );

                        // Create the image element
                        const imageElement = document.createElement("img");
                        if (messages[i].read == 1) {
                            imageElement.src =
                                "https://sanskartechnolab.com/files/double_right.svg";
                        } else {
                            imageElement.src =
                                "https://sanskartechnolab.com/files/single_right.svg";
                        }
                        imageElement.alt = "single tick";
                        imageElement.className = "w-4 h-4 ml-2";

                        // Append elements to their respective parents
                        innerFlexContainer.appendChild(timestampParagraph);
                        innerFlexContainer.appendChild(imageElement);
                        outerDiv.appendChild(messageParagraph);
                        outerDiv.appendChild(innerFlexContainer);
                        container.appendChild(outerDiv);
                    } else {
                        // if message recived by admin

                        const container = document.getElementById("messages");

                        // Create the outermost div element with classes
                        const outerDiv = document.createElement("div");
                        outerDiv.className = "px-2 pt-2 mr-5 mt-5";

                        // Create the message paragraph element
                        const messageParagraph = document.createElement("p");
                        messageParagraph.className =
                            "text-[#31393C] bg-[#F6F9FB] text-xs lg:text-base md:text-sm p-4 py-2 rounded-r-[10px] rounded-b-[10px] inline-block";
                        messageParagraph.textContent = messages[i].message;

                        // Create the inner relative span container
                        const innerSpan = document.createElement("span");
                        innerSpan.className = "relative";

                        // Create the timestamp paragraph element within the span
                        const timestampParagraph = document.createElement("p");
                        if (messages[i].message.length < 5) {
                            timestampParagraph.className =
                                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute -right-8 whitespace-nowrap overflow-visible";
                        } else if (messages[i].message.length <= 10) {
                            timestampParagraph.className =
                                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute -right-3 whitespace-nowrap overflow-visible";
                        } else {
                            timestampParagraph.className =
                                "text-[#9A9A9A] lg:text-sm md:text-xs text-xs absolute right-0 whitespace-nowrap overflow-visible";
                        }
                        timestampParagraph.textContent = formatDateToAMPM(
                            messages[i].date
                        );
                        // timestampParagraph.textContent = messages[i].message.length;

                        // Append elements to their respective parents
                        innerSpan.appendChild(timestampParagraph);
                        outerDiv.appendChild(messageParagraph);
                        outerDiv.appendChild(innerSpan);
                        container.appendChild(outerDiv);
                    }
                }
            });
    }


    async function send_message(e) {
        e.preventDefault();
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData.entries());
        formData.set("data", JSON.stringify(data));
        var message = data.chat_message;

        if (message === "") {
            chat_message.classList.add("!border", "!border-red-500");
            chat_message.classList.remove("border-none");
        } else {
            var parent = document.getElementById("messages");
            const question =
                parent.lastElementChild.firstElementChild.innerHTML;

            if (
                question ===
                // "Please Give Some Details About Your Customization."
                "Kindly let us know the details of your specific requirements, so we can assist you better!"
            ) {
                questions_answer.push({ question: question, answer: message });
                chat_message.value = "";
                create_user_message_div(
                    "messages",
                    "px-2 pt-2 text-right ml-5 mt-5",
                    message
                );
                var message1 = `Please provide your contact details so we can reach out to you.`;
                await create_bot_message_div(
                    "messages",
                    "px-2 pt-2 mr-5 mt-5 -mb-3",
                    message1,
                    [],
                    '',
                    []
                );
                set_get_user_name_bot_message();
                send_final_bot_message('q-a')
            }
            
            else if (question === "In order to assist you better, kindly provide a brief description of your customization needs.") {
                questions_answer.push({question: question, answer: message})
                chat_message.value = "";
                create_user_message_div(
                    "messages",
                    "px-2 pt-2 text-right ml-5 mt-5",
                    message,
                );

                var message1 = `Please provide your contact details so we can reach out to you.`;
                await create_bot_message_div(
                    "messages",
                    "px-2 pt-2 mr-5 mt-5 -mb-3",
                    message1,
                    [],
                    '',
                    []
                );
                set_get_user_name_bot_message();
                send_final_bot_message('q-a')
                
            }

            else if (question === "What is your name ?") {
                user_details.push({"name": message})
                chat_message.value = "";
                create_user_message_div(
                    "messages",
                    "px-2 pt-2 text-right ml-5 mt-5",
                    message,
                );
                set_get_user_email_bot_message();
                send_final_bot_message('name')
            }

            else if (question === "What is your email address ?") {
                
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if(!emailRegex.test(message)){
                    // alert("please enter currect email address")
                    chat_message.classList.add("!border", "!border-red-500");
                    chat_message.classList.remove("border-none");
                }
                else{
                    user_details.push({"email": message})
                    chat_message.value = "";
                    create_user_message_div(
                        "messages",
                        "px-2 pt-2 text-right ml-5 mt-5",
                        message
                    );

                    send_final_bot_message('email')
                }
            } 
            
            else {
                chat_message.value = "";
                var message1 = 'Sorry i can`t understand you. please select above option.';
               await create_bot_message_div(
                    "messages",
                    "px-2 pt-2 mr-5 mt-5",
                    message1,
                    [],
                    '',
                    []
                );
                start_auto_message()
            }


            // var token = window.localStorage.getItem("chat_token")
            // if (!token){
            //     window.localStorage.setItem("chat_token", Math.random().toString(36).substr(2))
            // }
            // fetch("https://sanskar.frappe.cloud/api/resource/Astro Site Chat",{
            //         method: 'POST',
            //         headers: {
            //             'Accept': 'application/json',
            //             'Content-Type': 'application/json',
            //         },
            //         body: JSON.stringify({
            //             message: message,
            //             token: window.localStorage.getItem("chat_token"),
            //             is_owner: 1,
            //             // ip: get_ip()
            //         })
            //         }).then((res) => {
            //         if(res.status === 200){
            //             // alert("Your Message is Sent.")
            //             chat_message.value = ""
            //         }
            //         else{
            //             alert("faild to send message")
            //         }
            //     }).catch((error) => {
            //         console.log(error)
            //     })
        }
    }

    // Auto Message Button Actions ERPNext

    async function erpnext() {
        selected_technology = [];
        selected_technology.push("ERPNext");
        await send_final_bot_message('technology')
        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "ERPNext"
        );
        // var buttons = [{'button_id': 'accont', 'button_label': 'Account', 'button_click_action': e_account, 'button_class': 'border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white'},
        //                {'button_id': 'manufacturing', 'button_label': 'Manufacturing', 'button_click_action': e_manufacturing, 'button_class': 'border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white'}]
        var buttons = [
            {
                button_id: "e_module_custom",
                button_label: "Customization",
                button_click_action: e_module_custom,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white",
            },
            {
                button_id: "e_module_check_confirm",
                button_label: "Confirm",
                button_click_action: e_module_check_confirm,
                button_class:
                    "border bg-[#3E96F4] text-white px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#b2d5fb]",
            },
            // {
            //     button_id: "show_more",
            //     button_label: "Show More",
            //     button_click_action: e_module_custom,
            //     button_class:
            //         "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white",
            // }

        ];
        // var checkboxes = [{"value": "Accounting", "id": "e_acco"}, {"value": "Manufacturing", "id": "e_manu"}, {"value": "HR & Payroll", "id": "e_hr"}, {"value": "LMS", "id": "e_lms"}]
        // var checkboxes = ["Accounting", "Manufacturing", "HR & Payroll", "LMS"];
//         var checkboxes = [
//     "Sales",
//     "Purchase",
//     "Inventory",
//     "Accounts",
//     "Human Resources (HR)",
//     "Projects",
//     "CRM (Customer Relationship Management)",
//     "Manufacturing",
//     "Website",
//     "Support",
//     "Quality Management",
//     "POS (Point of Sale)",
//     "Maintenance",
//     "Asset Management",
//     "Healthcare",
//     "Education",
//     "Agriculture",
//     "LMS (Learning Management System)"
// ]

    var checkboxes = [
        "Manufacturing",
        "Inventory",  
        "Human Resources (HR)",
        "CRM",
        "Projects",
        "Accounts",
        "Sales",
        "Purchase",
        "Website",
        "Support",
        "LMS (Learning Management System)",
        "Asset Management",
        "Healthcare"
    ]
        var message = "For ERPNext, which module would you like to proceed with? ";
        // create_bot_message_div('messages', 'px-2 pt-2 mr-5 mt-5', message, '10:00 AM', buttons)
        create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            buttons,
            '',
            checkboxes
            );
    }

    async function e_module_check_confirm() {
        selected_module = [];
        // Loop through checkboxes by their IDs
        // const checkboxIds = ["e_acco", "e_manu", "e_hr", "e_lms"];
        const checkboxIds = [
        "Manufacturing",
        "Inventory",  
        "Human Resources (HR)",
        "CRM",
        "Projects",
        "Accounts",
        "Sales",
        "Purchase",
        "Website",
        "Support",
        "LMS (Learning Management System)",
        "Asset Management",
        "Healthcare"
    ]
        checkboxIds.forEach((id) => {
            const checkbox = document.getElementById(id);
            if (checkbox){
                if (checkbox.checked) {
                    selected_module.push({"module_name": checkbox.value});
                    const mylist = JSON.stringify(selected_module);
                        window.localStorage.setItem("selected_module", mylist)
                }
            }
        });

        if (selected_module.length === 0) {
            chat_message.placeholder='Please select at least one module';
            // var message = "Please Select Module For ERPNext.";
            // await create_bot_message_div(
            //     "messages",
            //     "px-2 pt-2 mr-5 mt-5",
            //     message,
            //     [],
            //     '',
            //     []
            // );
            // erpnext()
        } else {
            await send_final_bot_message('module')
            var message = `Please provide your contact details so we can reach out to you.`;
           await create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5 -mb-3",
                message,
                [],
                '',
                []
            );
            set_get_user_name_bot_message();
        }
    }

    async function e_module_custom(){
        need_customization = 1
        selected_module = [];
        // Loop through checkboxes by their IDs
        // const checkboxIds = ["e_acco", "e_manu", "e_hr", "e_lms"];
        const checkboxIds = [
        "Manufacturing",
        "Inventory",  
        "Human Resources (HR)",
        "CRM",
        "Projects",
        "Accounts",
        "Sales",
        "Purchase",
        "Website",
        "Support",
        "LMS (Learning Management System)",
        "Asset Management",
        "Healthcare"
    ]
        checkboxIds.forEach((id) => {
            const checkbox = document.getElementById(id);
            if (checkbox){
                if (checkbox.checked) {
                    selected_module.push({"module_name": checkbox.value});
                    const mylist = JSON.stringify(selected_module);
                    window.localStorage.setItem("selected_module", mylist)
                }
            }
        });

        await send_final_bot_message('module_customization')
        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "Customization"
        );
      
            var message = `In order to assist you better, kindly provide a brief description of your customization needs.`;
            await create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5 -mb-3",
                message,
                [],
                '',
                []
            );
            // var chat_message = document.getElementById('chat_message')
            chat_message.placeholder='message';
            chat_message.disabled = false;
            send_button.disabled = false;

    }

    // Auto Message Button Actions ServiceNow

    async function service_now() {
        selected_technology = [];
        selected_technology.push("ServiceNow");
        await send_final_bot_message('technology')
        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "ServiceNow"
        );
        // var buttons = [{'button_id': 'accont', 'button_label': 'Account', 'button_click_action': s_account, 'button_class': 'border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white'},
        //                {'button_id': 'manufacturing', 'button_label': 'Manufacturing', 'button_click_action': s_manufacturing, 'button_class': 'border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white'}]

        // var message = "For ServiceNow, which module would you like to proceed with? "
        // create_bot_message_div('messages', 'px-2 pt-2 mr-5 mt-5', message, '10:00 AM', buttons)

        var buttons = [
            {
                button_id: "s_module_custom",
                button_label: "Customization",
                button_click_action: s_module_custom,
                button_class:
                    "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white",
            },
            {
                button_id: "s_module_check_confirm",
                button_label: "Confirm",
                button_click_action: s_module_check_confirm,
                button_class:
                    "border bg-[#3E96F4] text-white px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#b2d5fb]",
            },
        ];
        // var checkboxes = [{"value": "Accounting", "id": "s_acco"}, {"value": "Manufacturing", "id": "s_manu"}, {"value": "HR & Payroll", "id": "s_hr"}, {"value": "LMS", "id": "s_lms"}]
        // var checkboxes = ["Accounting", "Manufacturing", "HR & Payroll", "LMS"];

        var checkboxes = [
            "IT Service Management (ITSM)",
            "IT Operations Management (ITOM)",
            "IT Asset Management (ITAM)",
            "IT Business Management (ITBM)",
            "HR Service Delivery (HRSD)",
            "Automated Test Framework (ATF)",
            "Governance, Risk, and Compliance (GRC)",
            "Performance Analytics (PA)",
            "Security Operations (SecOps)",
            "Customer Service Management (CSM)",
            "Field Service Management (FSM)",
            "Telecommunications Service Management (TSM)",
            "Service Portal",
            "Event Management",
            "Orchestration",
            "App Engine Studio"
        ];



        var message = "For ServiceNow, which module would you like to proceed with? ";
        // create_bot_message_div('messages', 'px-2 pt-2 mr-5 mt-5', message, '10:00 AM', buttons)
        create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            buttons,
            '',
            checkboxes
        );
    }

    async function s_module_check_confirm() {
        // Loop through checkboxes by their IDs
        selected_module = [];
        // const checkboxIds = ["e_acco", "e_manu", "e_hr", "e_lms"];
        // const checkboxIds = [
        //     "Accounting",
        //     "Manufacturing",
        //     "HR & Payroll",
        //     "LMS",
        // ];
        var checkboxIds = [
            "IT Service Management (ITSM)",
            "IT Operations Management (ITOM)",
            "IT Asset Management (ITAM)",
            "IT Business Management (ITBM)",
            "HR Service Delivery (HRSD)",
            "Automated Test Framework (ATF)",
            "Governance, Risk, and Compliance (GRC)",
            "Performance Analytics (PA)",
            "Security Operations (SecOps)",
            "Customer Service Management (CSM)",
            "Field Service Management (FSM)",
            "Telecommunications Service Management (TSM)",
            "Service Portal",
            "Event Management",
            "Orchestration",
            "App Engine Studio"
        ];
        checkboxIds.forEach((id) => {
            const checkbox = document.getElementById(id);
            if (checkbox){
                if (checkbox.checked) {
                    selected_module.push({"module_name": checkbox.value});
                    const mylist = JSON.stringify(selected_module);
                    window.localStorage.setItem("selected_module", mylist)
                }
            }
        });
        if (selected_module.length === 0) {

            chat_message.placeholder='Please select at least one module';

            // var message = "Please Select Module For ServiceNow.";
            // await create_bot_message_div(
            //     "messages",
            //     "px-2 pt-2 mr-5 mt-5",
            //     message,
            //     [],
            //     '',
            //     []
            // );
            // service_now()
        } else {
            await send_final_bot_message('module')
            var message = `Please provide your contact details so we can reach out to you.`;
            await create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5 -mb-3",
                message,
                [],
                '',
                []
            );
            set_get_user_name_bot_message();
            
        }
    }

    async function s_module_custom(){
        need_customization = 1
        selected_module = [];
        // const checkboxIds = ["e_acco", "e_manu", "e_hr", "e_lms"];
        // const checkboxIds = [
            //     "Accounting",
            //     "Manufacturing",
            //     "HR & Payroll",
            //     "LMS",
        // ];
            var checkboxIds = [
                "IT Service Management (ITSM)",
                "IT Operations Management (ITOM)",
                "IT Asset Management (ITAM)",
                "IT Business Management (ITBM)",
                "HR Service Delivery (HRSD)",
                "Automated Test Framework (ATF)",
                "Governance, Risk, and Compliance (GRC)",
                "Performance Analytics (PA)",
                "Security Operations (SecOps)",
                "Customer Service Management (CSM)",
                "Field Service Management (FSM)",
                "Telecommunications Service Management (TSM)",
                "Service Portal",
                "Event Management",
                "Orchestration",
                "App Engine Studio"
            ];
            checkboxIds.forEach((id) => {
                const checkbox = document.getElementById(id);
                if (checkbox){
                    if (checkbox.checked) {
                        selected_module.push({"module_name": checkbox.value});
                        const mylist = JSON.stringify(selected_module);
                        window.localStorage.setItem("selected_module", mylist)
                    }
                }
        });
        
        await send_final_bot_message('module_customization')
        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "Customization"
        );


        var message = `In order to assist you better, kindly provide a brief description of your customization needs.`;
        await create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5 -mb-3",
            message,
            [],
            '',
            []
            );
            // var chat_message = document.getElementById('chat_message')
            chat_message.placeholder='message';
            chat_message.disabled = false;
            send_button.disabled = false;
            
        }
        
    // Auto Message Button Actions ERPNext Customization

    async function customization() {
        await send_final_bot_message('technology')
        selected_technology = [];
        // selected_technology.push("Customization");
        selected_technology.push("Something Else");

        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "Something Else"
        );
        // var message = 'Please Give Some Details About Your Customization.';
        var message = 'Kindly let us know the details of your specific requirements, so we can assist you better!';
        await create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            [],
            '',
            []
        );
        // var chat_message = document.getElementById('chat_message')
        chat_message.placeholder='message';
        chat_message.disabled = false;
        send_button.disabled = false;
    }

    //

    async function set_get_user_name_bot_message() {
        var message = "What is your name ?";
        await create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            [],
            '',
            [],
            0
        );

        // var chat_message = document.getElementById('chat_message')
        chat_message.placeholder='Enter your name';
        chat_message.disabled = false;
        send_button.disabled = false;
    }

    async function set_get_user_email_bot_message() {
        var message = "What is your email address ?";
        await create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            [],
            '',
            [],
        );

        // var chat_message = document.getElementById('chat_message')
        chat_message.placeholder='Enter your email';
        chat_message.disabled = false;
        send_button.disabled = false;
    }

    // send data to frappe backend
    function send_final_bot_message(type){

    // Function to get the user's IP address using ipify
    function getUserIPAddress() {
        return fetch('https://api.ipify.org?format=json')
            .then(response => response.json())
            .then(data => data.ip)
            .catch(error => {
                console.error('Error fetching IP address:', error);
                return null; // Handle the error gracefully
            });
    }

        // Use the function to get the IP address and then make your API request
        getUserIPAddress().then(ipAddress => {
            let { browserName, device } = detectBrowser();
            if (ipAddress) {

                var token = window.localStorage.getItem("chat_token");

                if(type=="technology"){
                    fetch("https://sanskar.frappe.cloud/api/resource/Astro Site Chat", {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            // email: user_details[1].email,
                            
                            // name1: user_details[0].name,
                            technology: selected_technology[0],
                            // module: selected_module,
                            // question_answer: questions_answer,
                            // need_customization: need_customization,
                            
                            token: token,
                            is_owner: 1,
                            ip: ipAddress,
                            browser_name: browserName,
                            device: device,
                            
                        })
                    }).then((res) => {
                        if (res.status === 200) {
                            // // var message = `Thank you for providing your information. Our sales team will reach you soon at your email address. For any other details, you can reach us at <a href='mailto:info@sanskartechnolab.com' class='text-[#3E96F4]'>info@sanskartechnolab.com</a>`;
                            // var message = `Thank you! We have received your contact details. Our team will get back to you. For further details, you can reach out to us at  <a href='mailto:info@sanskartechnolab.com' class='text-[#3E96F4]'>info@sanskartechnolab.com</a>`;
                            // var buttons = [{
                            //     button_id: "start_over",
                            //     button_label: "Start Over",
                            //     button_click_action: start_over,
                            //     button_class:
                            //         "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-xs md:text-sm lg:text-base rounded-lg mt-1 ml-5 mt-5 hover:bg-[#3E96F4] hover:text-white",
                            // }]
                            // create_bot_message_div(
                            //     "messages",
                            //     "px-2 pt-2 mr-5 mt-5",
                            //     message,
                            //     buttons,
                            //     '',
                            //     []
                            // );
                            // // var chat_message = document.getElementById('chat_message')
                            // chat_message.placeholder='Please select from the options';
                            // chat_message.disabled = true;
                            // send_button.disabled = true;
                            
                            // //   window.location.href="/thank-you"

                            // console.log("okay")

                        } else {
                            alert("Failed");
                        }
                    }).catch((error) => {
                        console.log(error);
                    });
                }

                else{
                    fetch(`https://sanskar.frappe.cloud/api/resource/Astro Site Chat?filters=[["token", "=", "${token}"],["ip", "=", "${ipAddress}"]]&fields=["name"]`,{
                            method: "GET",
                            headers: {
                                Accept: "application/json",
                                "Content-Type": "application/json",
                            },
                        }
                    )
                    .then((response) => response.json())
                    .then((data) => {
                        if(data.data[0].name){
                                let body_data = ''
                                if (type==="module"){
                                    body_data = JSON.stringify(
                                        {
                                            module: selected_module,
                                        }
                                    )
                                }
                                if (type==="module_customization"){
                                    body_data = JSON.stringify(
                                        {
                                            module: selected_module,
                                            need_customization: need_customization,
                                        }
                                    )
                                }
                                if (type==="q-a"){
                                    body_data = JSON.stringify(
                                    {
                                        question_answer: questions_answer,
                                    }
                                    )
                                }
                                if (type==="module_customization"){
                                    body_data = JSON.stringify(
                                        {
                                            module: selected_module,
                                            need_customization: need_customization,
                                        }
                                    )
                                }
                                if (type==="name"){
                                    body_data = JSON.stringify(
                                        {
                                            name1: user_details[0].name,
                                        }
                                    )
                                }
                                if (type==="email"){
                                    body_data = JSON.stringify(
                                        {
                                            email: user_details[1].email,
                                        }
                                    )
                                }

                                fetch(`https://sanskar.frappe.cloud/api/resource/Astro Site Chat/${data.data[0].name}`,{
                                    method: 'PUT',
                                    headers: {
                                        'Accept': 'application/json',
                                        'Content-Type': 'application/json',
                                    },
                                    body: body_data
                                }).then((res) => {
                                    if (res.status === 200 && type == "email") {
                                        // var message = `Thank you for providing your information. Our sales team will reach you soon at your email address. For any other details, you can reach us at <a href='mailto:info@sanskartechnolab.com' class='text-[#3E96F4]'>info@sanskartechnolab.com</a>`;
                                        var message = `Thank you! We have received your contact details. Our team will get back to you. For further details, you can reach out to us at  <a href='mailto:info@sanskartechnolab.com' class='text-[#3E96F4]'>info@sanskartechnolab.com</a>`;
                                        var buttons = [{
                                            button_id: "start_over",
                                            button_label: "Start Over",
                                            button_click_action: start_over,
                                            button_class:
                                                "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-xs md:text-sm lg:text-base rounded-lg mt-1 ml-5 mt-5 hover:bg-[#3E96F4] hover:text-white",
                                        }]
                                        create_bot_message_div(
                                            "messages",
                                            "px-2 pt-2 mr-5 mt-5",
                                            message,
                                            buttons,
                                            '',
                                            []
                                        );
                                        // var chat_message = document.getElementById('chat_message')
                                        chat_message.placeholder='Please select from the options';
                                        chat_message.disabled = true;
                                        send_button.disabled = true;
                                        
                                        //   window.location.href="/thank-you"
                                    }
                                    
                                }).catch((error) => {
                                    console.log(error);
                                });
                            }
                    })
                }



            } else {
                // Handle the case where IP retrieval failed
                alert("Failed to retrieve IP address");
            }
        });


        // fetch("https://sanskar.frappe.cloud/api/resource/Astro Site Chat",{
        //               method: 'POST',
        //               headers: {
        //                   'Accept': 'application/json',
        //                   'Content-Type': 'application/json',
        //               },
        //               body: JSON.stringify({
        //                   email: user_details[1].email,
        //                   name1: user_details[0].name,
        //                   technology: selected_technology[0],
        //                   module: selected_module,
        //                   question_answer: questions_answer,
        //                   token: token,
        //                   is_owner: 1,
        //                   ip: '234.564.56.4'
        //               })
        //               }).then((res) => {
        //               if(res.status === 200){
        //                 var message = `Thank you for providing your information. Our sales team will reach you soon at your email address. For any other details, you can reach us at info@sanskartechnolab.com.`
        //                 create_bot_message_div(
        //                     "messages",
        //                     "px-2 pt-2 mr-5 mt-5",
        //                     message,
        //                     [],
        //                     []
        //                 );
        //                 //   window.location.href="/thank-you"
        //               }
        //               else{
        //                   alert("failed")
        //               }
        //           }).catch((error) => {
        //               console.log(error)
        //           })
    

        // var message1 = 'Need Any Other Help ?'
        // create_bot_message_div(
        //     "messages",
        //     "px-2 pt-2 mr-5 mt-5",
        //     message1,
        //     [],
        //     []
        // );


    }

    async function career(){
        create_user_message_div(
            "messages",
            "px-2 pt-2 text-right ml-5 mt-5",
            "Career"
        );

        var message = "<a href='/career?s=1' class='text-[#3E96F4]'>Click here to see current opening</a>";
        await create_bot_message_div(
            "messages",
            "px-2 pt-2 mr-5 mt-5",
            message,
            [],
            '',
            []
        );
        

    }


    // async function third_party_integration(){
    //     create_user_message_div(
    //         "messages",
    //         "px-2 pt-2 text-right ml-5 mt-5",
    //         "Third Party Integration"
    //     );

    //     var message = "";
    //     await create_bot_message_div(
    //         "messages",
    //         "px-2 pt-2 mr-5 mt-5",
    //         message,
    //         [],
    //         '',
    //         []
    //     );
        
    // }


    // Utils Function 
    



    if(!window.localStorage.getItem("a")){
        if (window.innerWidth < 1024) { 
            body.style.overflow = "hidden";
        }
            start_auto_message(true);
        }
        else{
            if (window.innerWidth < 1024) { 
                body.style.overflow = "hidden";
            }
            var chat_html = window.localStorage.getItem("chat_html")
           
            document.getElementById("messages").innerHTML = chat_html
            scrollToBottom()


            setTimeout(function() {
                // Get a list of all button elements by their IDs
                const a = document.getElementById("messages")
                const buttons = a.querySelectorAll('button');


                let checkBoxesToCheck = window.localStorage.getItem("selected_module");

                if (checkBoxesToCheck) {
                    const checkboxes = document.querySelectorAll('input[type="checkbox"]');

                    checkboxes.forEach(checkbox => {
                        if (checkBoxesToCheck.includes(checkbox.id)) {
                            checkbox.checked = true;
                        }

                        checkbox.addEventListener('change', function (event) {
                            console.log("asdfasdf", event.target.id);
                            var sm = JSON.parse(window.localStorage.getItem("local_selected_module")) || [];
                            sm.push(event.target.id); // Use event.target.id to get the checkbox id
                            window.localStorage.setItem("local_selected_module", JSON.stringify(sm));
                        });
                    });
                }


                const question = a.lastElementChild.firstElementChild.innerHTML;
                if(question === "What is your name ?"){
                    chat_message.placeholder='Enter your name';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "What is your email address ?"){
                    chat_message.placeholder='Enter your email';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "Kindly let us know the details of your specific requirements, so we can assist you better!"){
                    chat_message.placeholder='Type message';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "In order to assist you better, kindly provide a brief description of your customization needs."){
                    chat_message.placeholder='Type message';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
    
                buttons.forEach(button => {
                    button.addEventListener("click", function() {
                        // Your event handler logic here
                        console.log(button.id)
                        if (button.id == 'erpnext'){
                            erpnext()
                        }
                        if (button.id == 'service_now'){
                            service_now()
                        }
                        if (button.id == 'customization'){
                            customization()
                        }
                        if (button.id == 'career'){
                            career()
                        }
                        if (button.id == 'e_module_custom'){
                            e_module_custom()
                        }
                        if (button.id == 'e_module_check_confirm'){
                            e_module_check_confirm()
                        }
                        if (button.id == 's_module_custom'){
                            s_module_custom()
                        }
                        if (button.id == 's_module_check_confirm'){
                            s_module_check_confirm()
                        }
                        if (button.id == 'start_over'){
                            start_over()
                        }
                        if (button.id == 'show_more'){
                            show_more()
                        }

                    });
                });
 
            }, 3000);   
        }


    function show_more(){
        var parent = document.getElementById("messages");
        var technology_q = parent.lastElementChild.firstElementChild.innerHTML;
                
        if (technology_q == "For ERPNext, which module would you like to proceed with? "){
            console.log("in if")
            var checkboxes = [
                                "Manufacturing",
                                "Inventory",  
                                "Human Resources (HR)",
                                "CRM",
                                "Projects",
                                "Accounts",
                                "Sales",
                                "Purchase",
                                "Website",
                                "Support",
                                "LMS (Learning Management System)",
                                "Asset Management",
                                "Healthcare"
                            ]
            var buttons = [
                {
                    button_id: "e_module_custom",
                    button_label: "Customization",
                    button_click_action: e_module_custom,
                    button_class:
                        "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white",
                },
                {
                    button_id: "e_module_check_confirm",
                    button_label: "Confirm",
                    button_click_action: e_module_check_confirm,
                    button_class:
                        "border bg-[#3E96F4] text-white px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#b2d5fb]",
                },

            ];
                var message = "For ERPNext, which module would you like to proceed with? ";
                if (parent.lastElementChild) {
                    parent.removeChild(parent.lastElementChild);
                }
                create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5",
                message,
                buttons,
                '',
                checkboxes,
                0,
                10
            );

        }

        if (technology_q === "For ServiceNow, which module would you like to proceed with? "){
            var buttons = [
                {
                    button_id: "s_module_custom",
                    button_label: "Customization",
                    button_click_action: s_module_custom,
                    button_class:
                        "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#3E96F4] hover:text-white",
                },
                {
                    button_id: "s_module_check_confirm",
                    button_label: "Confirm",
                    button_click_action: s_module_check_confirm,
                    button_class:
                        "border bg-[#3E96F4] text-white px-3 p-1 text-sm md:text-sm lg:text-base rounded-lg mt-1 ml-5 hover:bg-[#b2d5fb]",
                },
            ];

            var checkboxes = [
                "IT Service Management (ITSM)",
                "IT Operations Management (ITOM)",
                "IT Asset Management (ITAM)",
                "IT Business Management (ITBM)",
                "HR Service Delivery (HRSD)",
                "Automated Test Framework (ATF)",
                "Governance, Risk, and Compliance (GRC)",
                "Performance Analytics (PA)",
                "Security Operations (SecOps)",
                "Customer Service Management (CSM)",
                "Field Service Management (FSM)",
                "Telecommunications Service Management (TSM)",
                "Service Portal",
                "Event Management",
                "Orchestration",
                "App Engine Studio"
            ];

                var message = "For ServiceNow, which module would you like to proceed with? ";
                if (parent.lastElementChild) {
                    parent.removeChild(parent.lastElementChild);
                }
                create_bot_message_div(
                "messages",
                "px-2 pt-2 mr-5 mt-5",
                message,
                buttons,
                '',
                checkboxes,
                0,
                10
            );
        }
                
    }

    function show_popup() {
        chat_popup.classList.remove("hidden");
        if (window.innerWidth < 1024) { 
            body.style.overflow = "hidden";
        }
        chat_icon.classList.add("hidden");

        if(!window.localStorage.getItem("a")){
            start_auto_message(true);
        }
        else{
            var chat_html = window.localStorage.getItem("chat_html")
            document.getElementById("messages").innerHTML = chat_html
            scrollToBottom()


            setTimeout(function() {
                // Get a list of all button elements by their IDs
                const a = document.getElementById("messages")
                const buttons = a.querySelectorAll('button');
                let checkBoxesToCheck = window.localStorage.getItem("selected_module")
                console.log("asdf", checkBoxesToCheck)
                const checkboxes = a.querySelectorAll('input[type="checkbox"]');
  
                checkboxes.forEach(checkbox => {
                    if (checkBoxesToCheck.includes(checkbox.id)) {
                    checkbox.checked = true;
                    }
                });
    
                const question = a.lastElementChild.firstElementChild.innerHTML;
                if(question === "What is your name ?"){
                    chat_message.placeholder='Enter your name';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "What is your email address ?"){
                    chat_message.placeholder='Enter your email';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "Kindly let us know the details of your specific requirements, so we can assist you better!"){
                    chat_message.placeholder='Type message';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }
                if(question === "In order to assist you better, kindly provide a brief description of your customization needs."){
                    chat_message.placeholder='Type message';
                    chat_message.disabled = false;
                    send_button.disabled = false;
                }

                buttons.forEach(button => {
                    button.addEventListener("click", function() {
                        // Your event handler logic here
                        console.log("btn id", button.id)
                        if (button.id == 'erpnext'){
                            erpnext()
                        }
                        if (button.id == 'service_now'){
                            service_now()
                        }
                        if (button.id == 'customization'){
                            customization()
                        }
                        if (button.id == 'career'){
                            career()
                        }
                        if (button.id == 'e_module_custom'){
                            e_module_custom()
                        }
                        if (button.id == 'e_module_check_confirm'){
                            e_module_check_confirm()
                        }
                        if (button.id == 's_module_custom'){
                            s_module_custom()
                        }
                        if (button.id == 's_module_check_confirm'){
                            s_module_check_confirm()
                        }
                        if (button.id == 'show_more'){
                            show_more()
                        }

                    });
                });
 
            }, 3000);


        }

    }

        // get_messages()
        // const messages = document.getElementById("messages");
        // messages.scrollTop = messages.scrollHeight;

    function close_popup() {
            while (messagesDiv.firstChild){
                messagesDiv.removeChild(messagesDiv.firstChild)
            }
            chat_popup.classList.add("hidden");
            body.style.overflow = 'auto';
            chat_icon.classList.remove("hidden");
            getUserIPAddress().then(ipAddress => {
            let { browserName, device } = detectBrowser();
            if (ipAddress) {
                fetch("https://sanskar.frappe.cloud/api/resource/Astro Site Chat", {
                    method: 'POST',
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        email: user_details[1].email,
                        name1: user_details[0].name,
                        technology: selected_technology[0],
                        module: selected_module,
                        question_answer: questions_answer,
                        token: token,
                        is_owner: 1,
                        ip: ipAddress,
                        browser_name: browserName,
                        device: device,
                        need_customization: need_customization
                        
                    })
                }).then((res) => {
                    if (res.status === 200) {
                        var message = `Thank you for providing your information. Our sales team will reach you soon at your email address. For any other details, you can reach us at <a href='mailto:info@sanskartechnolab.com' class='text-[#3E96F4]'>info@sanskartechnolab.com</a>`;
                        var buttons = [{
                            button_id: "start_over",
                            button_label: "Start Over",
                            button_click_action: start_over,
                            button_class:
                                "border border-[#3E96F4] text-[#3E96F4] px-3 p-1 text-xs md:text-sm lg:text-base rounded-lg mt-1 ml-5 mt-5 hover:bg-[#3E96F4] hover:text-white",
                        }]
                        create_bot_message_div(
                            "messages",
                            "px-2 pt-2 mr-5 mt-5",
                            message,
                            buttons,
                            '',
                            []
                        );
                        // var chat_message = document.getElementById('chat_message')
                        chat_message.placeholder='Please select from the options';
                        chat_message.disabled = true;
                        send_button.disabled = true;
                        
                        //   window.location.href="/thank-you"
                    } else {
                        alert("Failed");
                    }
                }).catch((error) => {
                    console.log(error);
                });
            } else {
                // Handle the case where IP retrieval failed
                // alert("Failed to retrieve IP address");
                console.log("Failed to retrieve IP address");

            }
        });


    }

    function remove_error_class() {
        chat_message.classList.remove("!border", "!border-red-500");
    }

    function formatDateToAMPM(dateTimeString) {
        // Parse the input date string
        
        const date = new Date(dateTimeString);

        // Get the hours and minutes
        const hours = date.getHours();
        const minutes = date.getMinutes();

        // Determine whether it's AM or PM
        const ampm = hours >= 12 ? "PM" : "AM";

        // Convert hours to 12-hour format
        const formattedHours = hours % 12 === 0 ? 12 : hours % 12;

        // Add leading zero to minutes if needed
        const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;

        // Format the result as "hh:mm AM/PM"
        const formattedTime = `${formattedHours}:${formattedMinutes} ${ampm}`;

        return formattedTime;
    }

    function get_current_time(){
        const now = new Date();

        // Get the current hours and minutes
        let hours = now.getHours();
        let minutes = now.getMinutes();
        
        // Determine AM or PM
        const ampm = hours >= 12 ? 'PM' : 'AM';
        
        // Convert to 12-hour format
        hours = hours % 12;
        hours = hours ? hours : 12; // Handle midnight (0 hours) as 12 AM
        minutes = String(minutes).padStart(2, '0'); // Ensure two-digit minutes
        
        // Construct the formatted time string
        const formattedTime = `${hours}:${minutes} ${ampm}`;
        
        return formattedTime;
    }

    function scrollToBottom(){
        const messagesDiv = document.getElementById('messages');
        messagesDiv.scrollTop = 2000;
    }

    function get_ip() {
        // Return a Promise that resolves with the IP address
        return new Promise((resolve, reject) => {
            fetch("https://api.ipify.org?format=json")
                .then((response) => response.json())
                .then((data) => {
                    const ipAddress = data.ip;
                    // console.log("Public IP Address:", ipAddress);
                    resolve(ipAddress); // Resolve the Promise with the IP address
                })
                .catch((error) => {
                    console.error("Error fetching IP address:", error);
                    reject(error); // Reject the Promise with the error
                });
        });
    }

    // get browser and device name
    function detectBrowser() {
      const userAgent = navigator.userAgent;
      var browserName = 'Unknown';

      // Check for Chrome
      if (userAgent.indexOf("Chrome") !== -1) {
        browserName = "Google Chrome";
      }
      // Check for Firefox
      else if (userAgent.indexOf("Firefox") !== -1) {
        browserName = "Mozilla Firefox";
      }
      // Check for Safari
      else if (userAgent.indexOf("Safari") !== -1) {
        browserName = "Apple Safari";
      }
      // Check for Edge
      else if (userAgent.indexOf("Edg") !== -1) {
        browserName = "Microsoft Edge";
      }
      // Check for Internet Explorer
      else if (
        userAgent.indexOf("MSIE") !== -1 ||
        userAgent.indexOf("Trident") !== -1
      ) {
        browserName = "Internet Explorer";
      }

      // Log the detected browser to the console
    //   console.log(`Detected browser: ${browserName}`);

      // Detect the device type based on screen size
      const screenWidth = window.innerWidth;
      var device = 'Unknown'
      if (screenWidth <= 576) {
        device = 'Mobile'
      } else if (screenWidth <= 992) {
        device = 'Tablet'
      } else if (screenWidth <= 1200) {
        device = 'Laptop'
      } else {
        device = 'Desktop'
      }

      return { browserName, device }
    }

    get_ip()
        .then((ipAddress) => {
            // console.log("Received IP Address:", ipAddress);
        })
        .catch((error) => {
            console.error("Error:", error);
        });
        
    // Function to disable checkboxes within a specific message div
    function disablePreviousInputs() {
        const messageDiv = document.getElementById("messages");
        if (messageDiv) {
            const checkboxes = messageDiv.querySelectorAll('input[type="checkbox"]');
            const buttons = messageDiv.querySelectorAll('button');
            if (checkboxes.length > 0) {
            // Disable all checkboxes and buttons except the last one
                for (let i = 0; i < checkboxes.length; i++) {
                    checkboxes[i].disabled = true;
                }
            }
            if ( buttons.length > 0){
                for (let i = 0; i < buttons.length; i++) {
                    buttons[i].disabled = true;
                    buttons[i].classList.remove("hover:bg-[#3E96F4]", "hover:text-white", "hover:bg-[#b2d5fb]")
                }
            }
        }
    }

    function start_over(){

        // const parent = document.getElementById("messages");
        // // parent.querySelectorAll('*').forEach(child => child.remove());
        // while (parent.firstChild) {
        //     parent.removeChild(parent.firstChild);
        // }

        while (messagesDiv.firstChild){
            messagesDiv.removeChild(messagesDiv.firstChild)
        }
        start_auto_message()
    }


    chat_message.addEventListener("focus", remove_error_class);

    form.addEventListener("submit", send_message);
    chat_icon.addEventListener("click", show_popup);
    close_btn.addEventListener("click", close_popup);


    // const socket = io.connect("https://www.migoo.in:9000");
    // socket.on('connection', (socket) => {
    //     console.log('a user connected');
    //     socket.on('disconnect', () => {
    //         console.log('user disconnected');
    //     });
    // });

    function reset_chatbot(){
        while (messagesDiv.firstChild){
                messagesDiv.removeChild(messagesDiv.firstChild)
        }
        window.localStorage.removeItem("a")
        window.localStorage.removeItem("chat_token")
        window.localStorage.removeItem("chat_html")
        window.localStorage.removeItem("selected_module")
        selected_module = [];
        selected_technology = [];
        questions_answer = [];
        user_details = [];
        need_customization = 0
        start_auto_message(true)
    }
    document.getElementById("reset_chatbot").addEventListener("click", reset_chatbot)
</script>


